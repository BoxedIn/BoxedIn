/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package BoxedInEditor;

import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import javax.swing.JPanel;

/**
 *
 * @author azh5442
 */
public class LevelEditorDisplay extends javax.swing.JFrame {
    private JPanel editorPanel;
    private Graphics editorGraphics;
    private final int NUM_OF_BLOCKS;
    private int gridSpacing;
    Image currentImage;
    Level level;

    /**
     * Creates new form LevelEditorDisplay
     */
    public LevelEditorDisplay() {
        initComponents();       // init frame componenets
        editorPanel = jPanel4;
        editorGraphics = jPanel4.getGraphics();
        GameObject.levelGraphics = editorGraphics;
        NUM_OF_BLOCKS = 20;
        gridSpacing = editorPanel.getWidth() / NUM_OF_BLOCKS;  // divide display panel in to 20 x 20 grid
        Level.boxPixelHeight = gridSpacing; // setting static variable in Level
        Level.boxPixelWidth = gridSpacing;
        level = new Level(gridSpacing, gridSpacing);
        // must initialize a default image. also set cursor to box
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        currentImage = toolkit.getImage("box.gif");
        Point hotSpot = new Point(0,0);
        Cursor newCursor = toolkit.createCustomCursor(currentImage, hotSpot, "Square");
        setCursor(newCursor);
    }
    
    public void paint(Graphics g){
        super.paint(g);
        drawGrid();
        level.drawObjects();
    }
    
//    private void initializeImages(){
//        Toolkit toolkit = Toolkit.getDefaultToolkit();
//        Image image = toolkit.getImage("box.gif");
//        image = image.getScaledInstance(gridSpacing, gridSpacing, Image.SCALE_DEFAULT);
//        Point hotSpot = new Point(0,0);
//    }
    
    private void drawGrid(){
        int width = editorPanel.getWidth();
        int height = editorPanel.getHeight();
        for(int i = 0; i <= 20; i++){
            editorGraphics.drawLine(i*gridSpacing, 0, i*gridSpacing, gridSpacing*NUM_OF_BLOCKS);   // vertical lines
            editorGraphics.drawLine(0, i*gridSpacing, gridSpacing*NUM_OF_BLOCKS, i*gridSpacing); // horizontal lines
        }
    }
    
    private void refreshVariables(){
        editorPanel = jPanel4;  // update panel object
        editorGraphics = editorPanel.getGraphics(); // update graphics object
        // divide window into even blocks with the smallest dimension of the screen as reference
        int width = editorPanel.getWidth();
        int height = editorPanel.getHeight();
        if(width < height)
            gridSpacing = width / NUM_OF_BLOCKS;  // divide display panel in to 20 x 20 grid
        else
            gridSpacing = height / NUM_OF_BLOCKS;  // divide display panel in to 20 x 20 grid
        currentImage = currentImage.getScaledInstance(gridSpacing, gridSpacing, Image.SCALE_DEFAULT);
        Level.boxPixelHeight = gridSpacing; // reset static variables in Level
        Level.boxPixelWidth = gridSpacing;
        GameObject.levelGraphics = editorGraphics;  // set static graphics object in GameObject
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        squareButton = new javax.swing.JButton();
        triangleButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        NewFile = new javax.swing.JMenuItem();
        OpenFile = new javax.swing.JMenuItem();
        SaveFile = new javax.swing.JMenuItem();
        SaveFileAs = new javax.swing.JMenuItem();
        CloseFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 50));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jButton1.setIcon(new javax.swing.ImageIcon("P:\\SWENG_411\\FinalProject\\new_file.png")); // NOI18N
        jButton1.setPreferredSize(new java.awt.Dimension(50, 63));
        jPanel1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon("P:\\SWENG_411\\FinalProject\\open_file.png")); // NOI18N
        jButton2.setPreferredSize(new java.awt.Dimension(50, 63));
        jPanel1.add(jButton2);

        jButton4.setIcon(new javax.swing.ImageIcon("P:\\SWENG_411\\FinalProject\\save.png")); // NOI18N
        jButton4.setPreferredSize(new java.awt.Dimension(50, 63));
        jPanel1.add(jButton4);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setMaximumSize(new java.awt.Dimension(100, 32767));
        jPanel3.setPreferredSize(new java.awt.Dimension(80, 229));

        squareButton.setText("Square");
        squareButton.setPreferredSize(new java.awt.Dimension(70, 23));
        squareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareButtonActionPerformed(evt);
            }
        });
        jPanel3.add(squareButton);

        triangleButton.setText("Triangle");
        triangleButton.setPreferredSize(new java.awt.Dimension(80, 23));
        triangleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                triangleButtonActionPerformed(evt);
            }
        });
        jPanel3.add(triangleButton);

        jButton3.setText("Circle");
        jButton3.setPreferredSize(new java.awt.Dimension(70, 23));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);

        jPanel2.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(153, 204, 255));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 508, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        NewFile.setText("New File");
        jMenu1.add(NewFile);

        OpenFile.setText("OpenFile");
        jMenu1.add(OpenFile);

        SaveFile.setText("Save");
        jMenu1.add(SaveFile);

        SaveFileAs.setText("SaveAs");
        SaveFileAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFileAsActionPerformed(evt);
            }
        });
        jMenu1.add(SaveFileAs);

        CloseFile.setText("Close File");
        jMenu1.add(CloseFile);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>                        

    private void SaveFileAsActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void formComponentResized(java.awt.event.ComponentEvent evt) {                                      
        // window is resized
        refreshVariables();
//        initializeImages();
        //GameObject.gOImage = currentImage.getScaledInstance(gridSpacing, gridSpacing, Image.SCALE_DEFAULT); // *****for debugging
        repaint();
    }                                     

    private void squareButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // user presses square button
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        currentImage = toolkit.getImage("box.gif");
        currentImage = currentImage.getScaledInstance(gridSpacing, gridSpacing, Image.SCALE_DEFAULT);
        Point hotSpot = new Point(0,0);
        Cursor newCursor = toolkit.createCustomCursor(currentImage, hotSpot, "Square");
        setCursor(newCursor);
    }                                            

    private void triangleButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // user presses triangle button
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        currentImage = toolkit.getImage("triangle.gif");
        currentImage = currentImage.getScaledInstance(gridSpacing, gridSpacing, Image.SCALE_DEFAULT);
        Point hotSpot = new Point(0,0);
        Cursor newCursor = toolkit.createCustomCursor(currentImage, hotSpot, "Triangle");
        setCursor(newCursor);
    }                                              

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // user presses circle button
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        currentImage = toolkit.getImage("circle.gif");
        currentImage = currentImage.getScaledInstance(gridSpacing, gridSpacing, Image.SCALE_DEFAULT);
        Point hotSpot = new Point(0,0);
        Cursor newCursor = toolkit.createCustomCursor(currentImage, hotSpot, "Circle");
        setCursor(newCursor);
    }                                        

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // user clicks inside editorPanel        
        Point p = snapToGrid(evt.getX(), evt.getY());
        GameObject go = new GameObject(p, currentImage);
        level.addGameObject(go);
        level.drawObjects();
    }                                    

    private Point snapToGrid(int x, int y){
        int closestX = x / gridSpacing;
        int closestY = y / gridSpacing;
        Point p = new Point(closestX, closestY);
        return p;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LevelEditorDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LevelEditorDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LevelEditorDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LevelEditorDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LevelEditorDisplay().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem CloseFile;
    private javax.swing.JMenuItem NewFile;
    private javax.swing.JMenuItem OpenFile;
    private javax.swing.JMenuItem SaveFile;
    private javax.swing.JMenuItem SaveFileAs;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton squareButton;
    private javax.swing.JButton triangleButton;
    // End of variables declaration                   
}
