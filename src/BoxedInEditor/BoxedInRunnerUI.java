/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package BoxedInRunner;

import BoxedInEditor.GameObject;
import BoxedInEditor.ImageUtility;
import BoxedInEditor.Level;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/**
 *
 * @author tmb5577
 */
public class BoxedInRunnerUI extends javax.swing.JFrame {
    private BoxedInRunner runner;

   
    public BoxedInRunnerUI(BoxedInRunner bir) {
        runner = bir;
        initComponents();
        GameObject.levelGraphics = levelPanel.getGraphics();    // initialize static variable graphics
        KeyControl listener = new KeyControl();
	addKeyListener(listener);
        setFocusable(true);     // make this jFrame focusable, so the user can have their key pressed go to the listener
    }
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        runner.drawLevel();
    }
    
    public void refreshVariables(){
        // if there is a current level opened, update all the variables needed to draw the level
        if(runner.levelIsOpen()){
            int gridSpacing;
            int numberOfBlocks = runner.getLevelWidth();
            int width = levelPanel.getWidth();
            int height = levelPanel.getHeight();
            if(width < height){
                gridSpacing = width / numberOfBlocks;}  // divide display panel in to 20 x 20 grid
            else{
                gridSpacing = height / numberOfBlocks;}  // divide display panel in to 20 x 20 grid
            //currentImage = currentImage.getScaledInstance(gridSpacing, gridSpacing, Image.SCALE_DEFAULT);
            Level.boxPixelHeight = gridSpacing; // reset static variables in Level
            Level.boxPixelWidth = gridSpacing;
            GameObject.levelGraphics = levelPanel.getGraphics();  // set static graphics object in GameObject
            ImageUtility.scaleImages(gridSpacing);        // ***** this causes occasionaly NullPoitnerExceptions on startup and is the cause of the buggy drawing after resize ***
        }
    }
    
    private void hideMenuToolbar(){
        menuPanel.setVisible(false);
        this.setSize(new Dimension(this.getWidth() - 150, this.getHeight()));
    }
    
    private void showMenuToolbar(){
        menuPanel.setVisible(true);
        this.setSize(new Dimension(this.getWidth() + 150, this.getHeight()));
    }
    
    private class KeyControl implements KeyListener {

    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_UP) {       // if up key
            System.out.println("up");
        }else if(e.getKeyCode() == KeyEvent.VK_DOWN) {   // if down key
            System.out.println("down");
        }else if(e.getKeyCode() == KeyEvent.VK_LEFT) {   // if left key
            System.out.println("left");
        }else if(e.getKeyCode() == KeyEvent.VK_RIGHT) {  // if right key
            System.out.println("right");
        }

    }

        @Override
        public void keyTyped(KeyEvent e) {
            // do nothing
        }

        @Override
        public void keyReleased(KeyEvent e) {
            // do nothing
        }
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        levelPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileDropdown = new javax.swing.JMenu();
        editDropdown = new javax.swing.JMenu();
        viewDropdown = new javax.swing.JMenu();
        menuToolbarCheckbox = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(750, 600));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        levelPanel.setBackground(new java.awt.Color(204, 204, 204));
        levelPanel.setPreferredSize(new java.awt.Dimension(600, 300));

        javax.swing.GroupLayout levelPanelLayout = new javax.swing.GroupLayout(levelPanel);
        levelPanel.setLayout(levelPanelLayout);
        levelPanelLayout.setHorizontalGroup(
            levelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );
        levelPanelLayout.setVerticalGroup(
            levelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        getContentPane().add(levelPanel);

        menuPanel.setBackground(new java.awt.Color(153, 204, 255));
        menuPanel.setMaximumSize(new java.awt.Dimension(150, 32767));
        menuPanel.setMinimumSize(new java.awt.Dimension(150, 0));
        menuPanel.setPreferredSize(new java.awt.Dimension(150, 300));

        jButton1.setText("Open Game");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Resume Game");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Restart Level");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        getContentPane().add(menuPanel);

        fileDropdown.setText("File");
        jMenuBar1.add(fileDropdown);

        editDropdown.setText("Edit");
        jMenuBar1.add(editDropdown);

        viewDropdown.setText("View");

        menuToolbarCheckbox.setSelected(true);
        menuToolbarCheckbox.setText("Menu Toolbar");
        menuToolbarCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuToolbarCheckboxActionPerformed(evt);
            }
        });
        viewDropdown.add(menuToolbarCheckbox);

        jMenuBar1.add(viewDropdown);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>                        

    private void menuToolbarCheckboxActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // menuToolbar checkbox in view menu clicked
        if(menuToolbarCheckbox.isSelected()){
            showMenuToolbar();
        }else{
            hideMenuToolbar();
        }
    }                                                   

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // menuToolbar open level button pressed
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // menuToolbar resume game button
        //runner.resumeGame();
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // menuToolbar restart level
        //runner.restartLevel();
    }                                        

    private void formComponentResized(java.awt.event.ComponentEvent evt) {                                      
        // window is resized
        refreshVariables();
        repaint();  // call repaint to redraw the level
    }                                     


    // Variables declaration - do not modify                     
    private javax.swing.JMenu editDropdown;
    private javax.swing.JMenu fileDropdown;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel levelPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JRadioButtonMenuItem menuToolbarCheckbox;
    private javax.swing.JMenu viewDropdown;
    // End of variables declaration                   
}
